import os
from pickle import dump

from exencolorlogs import Logger
from numpy import array
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import cross_val_score

from utils.datamodels import Database
from utils.enums import FetchMode


async def train(db: Database):
    log = Logger("TRAIN")
    records = await db.execute(
        "SELECT total_chars, unique_chars, total_words, unique_words, is_spam FROM data WHERE is_spam IS NOT NULL",
        fetch_mode=FetchMode.ALL,
    )
    log.info("Preparing data... Amount of records: %s", len(records))
    data = array([list(r.values()) for r in records])
    train_x = data[:, 0:4]
    train_y = data[:, 4]

    model = RandomForestClassifier()
    log.info(
        "Estimated accuracy: %.2f%%",
        cross_val_score(model, train_x, train_y).mean() * 100,
    )
    log.info("Training...")
    model.fit(train_x, train_y)

    if not os.path.exists("./ai/models"):
        log.warning("Directory ./ai/models did not exist so was autogenerated")
        os.mkdir("./ai/models")

    with open("./ai/models/model.ai", "wb") as f:
        dump(model, f)
        log.ok("File saved successfully to ./ai/models/model.ai")
